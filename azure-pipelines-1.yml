# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
stages:
 - stage: Build
   jobs:
   - job: Build

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Docker@0
  displayName: 'Build an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: sumitdockerconnection
    imageName: 'sumit2120/test123:$(Build.BuildId)'

- task: Docker@0
  displayName: 'Push an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: sumitdockerconnection
    action: 'Push an image'
    imageName: 'sumit2120/test123:$(Build.BuildId)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: kubernetes
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: drop

- stage: Release
  displayName: Release
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  jobs:
  - deployment:
    displayName: Release
  
- task: qetza.replacetokens.replacetokens-task.replacetokens@5
  displayName: 'Replace tokens in deployment.yaml'
  inputs:
    rootDirectory: '$(System.DefaultWorkingDirectory)/_CWU-Docker container-CI-SS/drop'
    targetFiles: deployment.yaml
    tokenPattern: azpipelines

- task: Kubernetes@1
  displayName: 'kubectl apply'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Visual Studio Enterprise Subscription (1e206264-661d-4fc7-a6e4-c8f438e3ca7c)'
    azureResourceGroup: 'Kubctl_SS'
    kubernetesCluster: 'Realestate_SS'
    command: apply
    useConfigurationFile: true
    configuration: '$(System.DefaultWorkingDirectory)/_CWU-Docker container-CI-SS/drop'